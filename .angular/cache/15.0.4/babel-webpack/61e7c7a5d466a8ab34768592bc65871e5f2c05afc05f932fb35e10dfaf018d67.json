{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet LoginGuard = class LoginGuard {\n  constructor(authService, toastrService, router, jwtHelperService) {\n    this.authService = authService;\n    this.toastrService = toastrService;\n    this.router = router;\n    this.jwtHelperService = jwtHelperService;\n  }\n  canActivate(route, state) {\n    let accessToken = localStorage.getItem(\"accessToken\");\n    let refreshToken = localStorage.getItem(\"refreshToken\");\n    if (accessToken == null || refreshToken == null) {\n      this.router.navigate([\"login\"]);\n      this.toastrService.info(\"You should log in.\");\n      return false;\n    }\n    return true;\n  }\n};\nLoginGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], LoginGuard);\nexport { LoginGuard };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAUnC,IAAMC,UAAU,GAAhB,MAAMA,UAAU;EAErBC,YAAoBC,WAAuB,EAAUC,aAA2B,EAAUC,MAAa,EAAUC,gBAAiC;IAA9H,gBAAW,GAAXH,WAAW;IAAsB,kBAAa,GAAbC,aAAa;IAAwB,WAAM,GAANC,MAAM;IAAiB,qBAAgB,GAAhBC,gBAAgB;EAEjI;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,IAAIC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,IAAIC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAEvD,IAAGF,WAAW,IAAI,IAAI,IAAIG,YAAY,IAAI,IAAI,EAAC;MAC7C,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,IAAI,CAACV,aAAa,CAACW,IAAI,CAAC,oBAAoB,CAAC;MAC7C,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;CAEH;AArBYd,UAAU,eAHtBD,UAAU,CAAC;EACVgB,UAAU,EAAE;CACb,CAAC,GACWf,UAAU,CAqBtB;SArBYA,UAAU","names":["Injectable","LoginGuard","constructor","authService","toastrService","router","jwtHelperService","canActivate","route","state","accessToken","localStorage","getItem","refreshToken","navigate","info","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Mert\\frontEndProjects\\exampleProject\\src\\app\\guards\\login.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private authService:AuthService, private toastrService:ToastrService, private router:Router, private jwtHelperService:JwtHelperService) {\n    \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      \n      let accessToken = localStorage.getItem(\"accessToken\");\n      let refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if(accessToken == null || refreshToken == null){\n        this.router.navigate([\"login\"]);\n        this.toastrService.info(\"You should log in.\");\n        return false;\n      }\n      return true;\n    }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}