{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterPipePipe {\n  transform(value, filterText) {\n    letfilterText = filterText ? filterText.toLocaleLowerCase() : \"\";\n    return value;\n  }\n}\nFilterPipePipe.ɵfac = function FilterPipePipe_Factory(t) {\n  return new (t || FilterPipePipe)();\n};\nFilterPipePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"filterPipe\",\n  type: FilterPipePipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,cAAc;EAEzBC,SAAS,CAACC,KAAgB,EAAEC,UAAkB;IAC5CC,aAAa,GAAGD,UAAU,GAACA,UAAU,CAACE,iBAAiB,EAAE,GAAC,EAAE;IAC5D,OAAOH,KAAK;EACd;;AALWF,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;;QAAdA,cAAc;EAAAM;AAAA","names":["FilterPipePipe","transform","value","filterText","letfilterText","toLocaleLowerCase","pure"],"sourceRoot":"","sources":["C:\\Users\\Mert\\frontEndProjects\\exampleProject\\src\\app\\pipes\\filter-pipe.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Patient } from '../models/patient';\n\n@Pipe({\n  name: 'filterPipe'\n})\nexport class FilterPipePipe implements PipeTransform {\n\n  transform(value: Patient[], filterText: string): Patient[] {\n    letfilterText = filterText?filterText.toLocaleLowerCase():\"\";\n    return value;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}