{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/patient.service\";\nimport * as i3 from \"ngx-toastr\";\nexport class PatientAddComponent {\n  constructor(formBuilder, patientService, toastrService) {\n    this.formBuilder = formBuilder;\n    this.patientService = patientService;\n    this.toastrService = toastrService;\n  }\n  ngOnInit() {\n    this.createPatientAddForm();\n  }\n  createPatientAddForm() {\n    this.patientAddForm = this.formBuilder.group({\n      name: [\"\", Validators.required],\n      birthdate: [\"\", Validators.required],\n      nationalityNumber: [\"\", Validators.required],\n      hospitalId: [\"\", Validators.required]\n    });\n  }\n  addPatient() {\n    if (this.patientAddForm.valid) {\n      let patientModel = Object.assign({}, this.patientAddForm.value);\n      let patientToAdd = this.patientAddForm.value;\n      this.patientService.addPatient(patientToAdd).subscribe(res => {\n        this.toastrService.success(\"Patient was added\", \"Success!\");\n      }, responseError => {\n        console.log(responseError);\n        /*if(responseError.error.Errors.length > 0){\r\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\r\n            this.toastrService.error(responseError.error.Errors[i].ErrorMessage, \"Validation Error!\");\r\n          }\r\n        }*/\n      });\n    } else {\n      this.toastrService.error(\"Patient information is insufficient\", \"Alert!\");\n    }\n  }\n}\nPatientAddComponent.ɵfac = function PatientAddComponent_Factory(t) {\n  return new (t || PatientAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PatientService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\nPatientAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientAddComponent,\n  selectors: [[\"app-patient-add\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"content\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"title\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"name\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"Patient Name\", 1, \"form-control\"], [\"for\", \"birthDate\"], [\"type\", \"date\", \"id\", \"birthdate\", \"formControlName\", \"birthdate\", 1, \"form-control\"], [\"for\", \"nationalityNumber\"], [\"type\", \"text\", \"id\", \"nationalityNumber\", \"formControlName\", \"nationalityNumber\", \"placeholder\", \"Nationality Number\", 1, \"form-control\"], [\"for\", \"hospitalId\"], [\"type\", \"number\", \"id\", \"hospitalId\", \"formControlName\", \"hospitalId\", \"placeholder\", \"Hospital Id\", 1, \"form-control\"], [1, \"card-footer\"], [1, \"btn\", \"btn-fill\", \"btn-primary\", 3, \"click\"]],\n  template: function PatientAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n      i0.ɵɵtext(5, \"Add Patient\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6)(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Patient Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 9);\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n      i0.ɵɵtext(15, \"Birthdate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 9);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Nationality Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 9);\n      i0.ɵɵelement(22, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 15);\n      i0.ɵɵtext(25, \"Hospital Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 9);\n      i0.ɵɵelement(27, \"input\", 16);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 17)(29, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function PatientAddComponent_Template_button_click_29_listener() {\n        return ctx.addPatient();\n      });\n      i0.ɵɵtext(30, \"Add\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.patientAddForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;AAUhF,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,WAAuB,EAAUC,cAA6B,EAAUC,aAA2B;IAAnG,gBAAW,GAAXF,WAAW;IAAsB,mBAAc,GAAdC,cAAc;IAAyB,kBAAa,GAAbC,aAAa;EAEzG;EAEAC,QAAQ;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoB;IAClB,IAAI,CAACC,cAAc,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAC3CC,IAAI,EAAC,CAAC,EAAE,EAACV,UAAU,CAACW,QAAQ,CAAC;MAC7BC,SAAS,EAAC,CAAC,EAAE,EAACZ,UAAU,CAACW,QAAQ,CAAC;MAClCE,iBAAiB,EAAC,CAAC,EAAE,EAACb,UAAU,CAACW,QAAQ,CAAC;MAC1CG,UAAU,EAAC,CAAC,EAAE,EAACd,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAI,UAAU;IACR,IAAG,IAAI,CAACP,cAAc,CAACQ,KAAK,EAAC;MAC3B,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACX,cAAc,CAACY,KAAK,CAAC;MAC/D,IAAIC,YAAY,GAAsB,IAAI,CAACb,cAAc,CAACY,KAAK;MAC/D,IAAI,CAAChB,cAAc,CAACW,UAAU,CAACM,YAAY,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;QAC3D,IAAI,CAAClB,aAAa,CAACmB,OAAO,CAAC,mBAAmB,EAAC,UAAU,CAAC;MAC5D,CAAC,EAACC,aAAa,IAAG;QAChBC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;QAC1B;;;;;MAKF,CAAC,CAAC;KACH,MAAI;MACH,IAAI,CAACpB,aAAa,CAACuB,KAAK,CAAC,qCAAqC,EAAC,QAAQ,CAAC;;EAG5E;;AAvCW3B,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXhCC,8BAAqB;MAIaA,2BAAW;MAAAA,iBAAK;MAEtCA,8BAAuB;MAGOA,6BAAY;MAAAA,iBAAQ;MACtCA,+BAAwB;MACpBA,6BACiC;MACrCA,iBAAM;MAEVA,+BAAkB;MACSA,0BAAS;MAAAA,iBAAQ;MACxCA,+BAAwB;MACpBA,6BAAqF;MACzFA,iBAAM;MAEVA,+BAAkB;MACiBA,mCAAkB;MAAAA,iBAAQ;MACzDA,+BAAwB;MACpBA,6BAC4D;MAChEA,iBAAM;MAEVA,+BAAkB;MACUA,4BAAW;MAAAA,iBAAQ;MAC3CA,+BAAwB;MACpBA,6BACgC;MACpCA,iBAAM;MAIlBA,gCAAyB;MACoBA;QAAA,OAASC,gBAAY;MAAA,EAAC;MAACD,oBAAG;MAAAA,iBAAS;;;MA/BtEA,eAA4B;MAA5BA,8CAA4B","names":["Validators","PatientAddComponent","constructor","formBuilder","patientService","toastrService","ngOnInit","createPatientAddForm","patientAddForm","group","name","required","birthdate","nationalityNumber","hospitalId","addPatient","valid","patientModel","Object","assign","value","patientToAdd","subscribe","res","success","responseError","console","log","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Mert\\frontEndProjects\\exampleProject\\src\\app\\components\\patient-add\\patient-add.component.ts","C:\\Users\\Mert\\frontEndProjects\\exampleProject\\src\\app\\components\\patient-add\\patient-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { PatientRegisterDto } from 'src/app/models/DTOs/PatientDtos/patientRegisterDto';\nimport { PatientService } from 'src/app/services/patient.service';\n\n@Component({\n  selector: 'app-patient-add',\n  templateUrl: './patient-add.component.html',\n  styleUrls: ['./patient-add.component.scss']\n})\nexport class PatientAddComponent implements OnInit{\n\n  patientAddForm : FormGroup;\n\n  constructor(private formBuilder:FormBuilder, private patientService:PatientService, private toastrService:ToastrService) {\n  \n  }\n\n  ngOnInit(): void {\n    this.createPatientAddForm();\n  }\n\n  createPatientAddForm(){\n    this.patientAddForm = this.formBuilder.group({\n      name:[\"\",Validators.required],\n      birthdate:[\"\",Validators.required],\n      nationalityNumber:[\"\",Validators.required],\n      hospitalId:[\"\",Validators.required]\n    });\n  }\n\n  addPatient(){\n    if(this.patientAddForm.valid){\n      let patientModel = Object.assign({}, this.patientAddForm.value);\n      let patientToAdd:PatientRegisterDto = this.patientAddForm.value\n      this.patientService.addPatient(patientToAdd).subscribe(res => {\n        this.toastrService.success(\"Patient was added\",\"Success!\")\n      },responseError =>{\n        console.log(responseError)\n        /*if(responseError.error.Errors.length > 0){\n          for (let i = 0; i < responseError.error.Errors.length; i++) {\n            this.toastrService.error(responseError.error.Errors[i].ErrorMessage, \"Validation Error!\");\n          }\n        }*/\n      })\n    }else{\n      this.toastrService.error(\"Patient information is insufficient\",\"Alert!\")\n    }\n    \n  }\n\n}\n","<div class=\"content\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <h5 class=\"title\">Add Patient</h5>\n            </div>\n            <div class=\"card-body\">\n                <form [formGroup]=\"patientAddForm\">\n                    <div class=\"mb-3\">\n                        <label for=\"name\">Patient Name</label>\n                        <div class=\"form-group\">\n                            <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\"\n                                placeholder=\"Patient Name\" />\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"birthDate\">Birthdate</label>\n                        <div class=\"form-group\">\n                            <input type=\"date\" id=\"birthdate\" formControlName=\"birthdate\" class=\"form-control\" />\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"nationalityNumber\">Nationality Number</label>\n                        <div class=\"form-group\">\n                            <input type=\"text\" id=\"nationalityNumber\" formControlName=\"nationalityNumber\"\n                                class=\"form-control\" placeholder=\"Nationality Number\" />\n                        </div>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"hospitalId\">Hospital Id</label>\n                        <div class=\"form-group\">\n                            <input type=\"number\" id=\"hospitalId\" formControlName=\"hospitalId\" class=\"form-control\"\n                                placeholder=\"Hospital Id\" />\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"card-footer\">\n                <button class=\"btn btn-fill btn-primary\" (click)=\"addPatient()\">Add</button>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}