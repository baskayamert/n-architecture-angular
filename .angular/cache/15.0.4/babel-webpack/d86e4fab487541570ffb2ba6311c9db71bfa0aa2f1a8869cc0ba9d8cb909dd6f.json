{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let accessToken = localStorage.getItem(\"accessToken\");\n    let newRequest;\n    newRequest = request.clone({\n      headers: request.headers.set(\"Authorization\", \"Bearer \" + accessToken)\n    });\n    return next.handle(newRequest);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,eAAe;EAE1BC,eAAe;EAEfC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,IAAIC,UAA6B;IACjCA,UAAU,GAAGL,OAAO,CAACM,KAAK,CAAC;MACzBC,OAAO,EAAEP,OAAO,CAACO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,SAAS,GAAGN,WAAW;KACrE,CAAC;IACF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,UAAU,CAAC;EAChC;;AAXWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;AAAA","names":["AuthInterceptor","constructor","intercept","request","next","accessToken","localStorage","getItem","newRequest","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\Mert\\frontEndProjects\\exampleProject\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let accessToken = localStorage.getItem(\"accessToken\");\n    let newRequest : HttpRequest<any>;\n    newRequest = request.clone({\n      headers: request.headers.set(\"Authorization\",\"Bearer \" + accessToken)\n    })\n    return next.handle(newRequest);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}